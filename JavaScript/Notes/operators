
# Operadores em JavaScript

## Ordem de Precedência dos Operadores
Quando uma expressão contém múltiplos operadores, a ordem em que são avaliados é importante. A seguir está a ordem de precedência, do mais alto para o mais baixo:

1. Aritméticos
2. Relacionais
3. Lógicos
4. Ternário
5. Atribuição

---

## 1. Aritméticos
Operadores usados para realizar operações matemáticas básicas.

- **Adição**: `5 + 2 = 7`
- **Subtração**: `5 - 2 = 3`
- **Multiplicação**: `5 * 2 = 10`
- **Divisão**: `5 / 2 = 2.5`
- **Módulo (Resto da Divisão)**: `5 % 2 = 1`
- **Exponenciação**: `5 ** 2 = 25`

### Detalhamento da Ordem de Precedência dos Aritméticos

1. Parênteses (`()`) para agrupar e priorizar operações
2. Exponenciação (`**`)
3. Multiplicação (`*`), Divisão (`/`), Módulo (`%`) - Mesma precedência; resolvem-se da esquerda para a direita
4. Adição (`+`), Subtração (`-`)

---

## 2. Atribuição
Operadores usados para atribuir valores a variáveis.

### Exemplos

- `var a = 5 + 3; // a = 8`
- `var b = a % 5; // b = 3`
- `var c = 5 * b ** 2; // c = 45`
- `var d = 10 - a / 2; // d = 6`
- `var e = 6 * 2 / d; // e = 2`
- `var f = b % e + 4 / e; // f = 3`

### 2.1 Auto-Atribuições
Atribuição de novos valores a uma variável baseada em seu valor atual.

- `var n = 3`
  - `n = n + 4; // n = 7`
  - `n = n - 5; // n = 2`
  - `n = n * 4; // n = 8`

### 2.2 Atribuições Simplificadas
Formas mais curtas de escrever auto-atribuições.

- `var n = 3`
  - `n += 4; // Equivale a n = n + 4`
  - `n -= 5; // Equivale a n = n - 5`
  - `n *= 4; // Equivale a n = n * 4`

Nota: Funciona para a mesma variável. Por exemplo, `n = n + x` pode ser simplificado, mas `n = m + x` não pode.

---

## 3. Relacionais
Operadores que comparam dois valores.

- **Maior**: `5 > 2 // true`
- **Menor**: `7 < 4 // false`
- **Maior ou Igual**: `8 >= 8 // true`
- **Menor ou Igual**: `9 <= 7 // false`
- **Igualdade**: `5 == 5 // true`
- **Diferente**: `4 != 4 // false`
- **Igualdade Estrita** (compara valor e tipo): `5 === '5' // false`
- **Diferente Estrito** (compara valor e tipo): `5 !== '5' // true`

### 3.1 Igualdade Estrita
- **Sintaxe**: `a === b`
- **Descrição**: Retorna `true` se `a` e `b` têm o mesmo valor e o mesmo tipo. Retorna `false` se os valores ou os tipos forem diferentes.

  **Exemplos**:
  - Valores e Tipos Iguais: `5 === 5 // true`
  - Valores Diferentes: `5 === 10 // false`
  - Tipos Diferentes: `5 === '5' // false`
  - Booleanos e Números: `true === 1 // false`
  - Objetos e Strings: `'hello' === new String('hello') // false`

### 3.2 Inequidade Estrita
- **Sintaxe**: `a !== b`
- **Descrição**: Retorna `true` se `a` e `b` são de tipos diferentes ou se são de tipos iguais, mas com valores diferentes. Retorna `false` se ambos os valores são iguais e do mesmo tipo.

  **Exemplos**:
  - Valores Diferentes: `5 !== '5' // true`
  - Valores e Tipos Diferentes: `3 !== 4 // true`
  - Valores e Tipos Iguais: `10 !== 10 // false`

---

## 4. Lógicos
Operadores usados para combinar expressões booleanas.

- **Negação (`!`)**: Inverte o valor booleano.
  - `!true // false`
  - `!false // true`

- **E (`&&`)**: Verdadeiro se ambos os operandos são verdadeiros.
  - `true && true // true`
  - `true && false // false`

- **Ou (`||`)**: Verdadeiro se pelo menos um dos operandos é verdadeiro.
  - `true || false // true`
  - `false || false // false`

---

## 5. Operador Ternário
O operador ternário é uma forma curta de fazer uma escolha entre dois valores, baseado em uma condição.

### Sintaxe
Se a condição for verdadeira, escolha o primeiro valor. Caso contrário, escolha o segundo valor.
```
condição ? valor1 : valor2
```

### Exemplos Detalhados

- **Exemplo 1**: Verificar se a pessoa é maior de idade
  ```javascript
  var idade = 16;
  var status = (idade >= 18) ? 'adulto' : 'menor';
  // Se a idade é 16, status será 'menor'.
  ```

- **Exemplo 2**: Verificar se a pessoa pode votar
  ```javascript
  var idade = 15;
  var podeVotar = (idade >= 16) ? 'sim' : 'não';
  // Se a idade é 15, podeVotar será 'não'.
  ```

- **Exemplo 3**: Verificar se a loja está aberta (considerando que está aberta entre 9h e 18h)
  ```javascript
  var hora = 10;
  var lojaAberta = (hora >= 9 && hora <= 18) ? 'aberta' : 'fechada';
  // Se a hora é 10, lojaAberta será 'aberta'.
  ```

### Exemplos de Expressões Lógicas

- **Exemplo 1**: Verificar se a idade está entre 15 e 17 anos
  ```javascript
  var idade = 16;
  var entre15e17 = (idade >= 15 && idade <= 17) ? 'sim' : 'não';
  // Se a idade é 16, entre15e17 será 'sim'.
  ```

- **Exemplo 2**: Verificar se o estado é RJ ou SP
  ```javascript
  var estado = 'RJ';
  var ehRJouSP = (estado == 'RJ' || estado == 'SP') ? 'sim' : 'não';
  // Se o estado é 'RJ', ehRJouSP será 'sim'.
  ```

- **Exemplo 3**: Verificar se o salário é acima de 1500 e a pessoa não é do sexo masculino
  ```javascript
  var salario = 2000;
  var sexo = 'F';
  var salarioEsexo = (salario > 1500 && sexo != 'M') ? 'sim' : 'não';
  // Se o salário é 2000 e o sexo é 'F', salarioEsexo será 'sim'.
  ```
