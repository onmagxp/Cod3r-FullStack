# Manipulação de Strings e Números em JavaScript #

*Formatação de Strings*

Interpolação de strings:
  Usando Template Strings para incluir variáveis dentro de   strings.
  Exemplo:
  let s = 'JavaScript';
  console.log(`Eu estou aprendendo ${s}`);

Concatenação de strings:
  Juntar strings usando o operador `+`.
  Exemplo:
  let s = 'JavaScript';
  console.log("Eu estou aprendendo " + s);

Métodos úteis para strings:
  - length: Retorna o número de caracteres na string.
  Exemplo: `s.length; // 10`
  - toUpperCase(): Converte todos os caracteres para maiúsculas.
  Exemplo: `s.toUpperCase(); // 'JAVASCRIPT'`
  - toLowerCase(): Converte todos os caracteres para minúsculas.
  Exemplo: `s.toLowerCase(); // 'javascript'`
  - includes(): Verifica se uma string contém outra string.
  Exemplo: `s.includes('Java'); // true`
  - slice(): Extrai uma parte da string e retorna como nova string.
  Exemplo: `s.slice(0, 4); // 'Java'`
  - replace(): Substitui parte da string por outra.
  Exemplo: `s.replace('Java', 'ECMA'); // 'ECMAScript'`


*Formatação para Números*

toFixed(): Formata um número usando notação de ponto fixo.
Exemplo: `let n1 = 1545.6; n1.toFixed(2); // '1545.60'`

toFixed() com replace(): Substitui o ponto decimal por uma vírgula.
Exemplo: `let n1 = 1545.6; n1.toFixed(2).replace('.', ','); // '1545,60'`

toLocaleString(): Formata o número de acordo com a localidade especificada.
Exemplo: `let n1 = 1545.6; n1.toLocaleString(); // Pode retornar '1,545.6' ou '1.545,6' dependendo da localidade`

Formatação de números como moeda:
  - Real (BRL): 
    Exemplo: `let n1 = 1545.6; n1.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' }); // 'R$ 1.545,60'`
  - Euro (EUR): 
    Exemplo: `let n1 = 1545.6; n1.toLocaleString('pt-BR', {   style: 'currency', currency: 'EUR' }); // '€ 1.545,60'`
  - Dólar Americano (USD):
    Exemplo: `let n1 = 1545.6; n1.toLocaleString('pt-BR', {   style: 'currency', currency: 'USD' }); // 'US$ 1.545,60'`

